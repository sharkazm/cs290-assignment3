/*
 * This is a JavaScript Scratchpad.
 *
 * Enter some JavaScript, then Right Click or choose from the Execute Menu:
 * 1. Run to evaluate the selected text (Ctrl+R),
 * 2. Inspect to bring up an Object Inspector on the result (Ctrl+I), or,
 * 3. Display to insert the result in a comment after the selection. (Ctrl+L)
 */

function uselessFunction(){
    return null;
}

//end your code

var bar = 'not a function';
var barType = typeof bar;

/**
* Assign the above variable 'bar' to an anonymous function with the following
* properites.
* @param {float[]} doubleArray - an array of floating point numbers.
* The function should multiply every number in the array by 2 (this should
* change the content of the array).
* @return {boolean} - true if the operation was sucessful, false otherwise.
* This should return false if any value in the array cannot be doubled.
*/

//your code here
doubleArray = [1.5, 2.3, 6.8];

bar = function (doubleArray){      //define anonymous function and set to bar
    try {
    doubleArray[0] = doubleArray[0]*2; 
    doubleArray[1] = doubleArray[1]*2;
    doubleArray[2] = doubleArray[2]*2;
    return true;
}

catch (e) {               //return false if error occurs
    return false;
}
}

//end your code

/**
* Creates a new GitLog
* @class
* @property {string} hash - the hash of the commit
* @property {Date} date - the date of the commit as a JS Date object
* @property {string} message - the commit message
*/
function GitLog(hash, date, message) {
    this.hash = hash;
    this.date = date;
    this.message = message;
}
/**
* Create a function called parseGit to parse Git commit logs
* The logs will be generated by the following command
* git log --pretty=format:"%h %ad \"%s\"" --date=rfc
* The result looks like this
* 3782618 Wed, 7 Jan 2015 21:42:26 -0800 "Initial commit"
* |hash | |             date           | |   message    |
* There will always be a space between the hash and date and between the date
* and the first " of the commit message.
*
* You will covert these into GitLog objects with the following properties:
*
*
* @param {array.<string>} logArray - an array of Git commit messages of the
* above
* format.
* @return {array.<GitLog>} - return an array GitLog instances
*/

//your code here

function parseGit(logArray){
    var sp = /(^[^\s]+)|"(.*?)"/;      //define variables
    var log = [];

    logArray.forEach(function(element, index, array){      //split the element for each argument
        var bnd  = element.split(sp);
        logs.push(new GitLog(bnd[1], new Date(bnd[3]), bnd[5]));
    });
    return log;
}

//end your code

